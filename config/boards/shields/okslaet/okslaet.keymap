
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#define DEFAULT      0
#define NUMLAYER     1
#define NAVLAYER     2
#define CLAWLER      3
#define QWERTY       4

/*                                      42 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────────┬────────────────────────╮ ╭─────────────────────────┬─────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │ │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
  │ 12  13  14  15 (16) 17 │ 18 (19) 20  21  22  23 │ │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │ │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯ ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
              ╰────────────┴────────────╯                         ╰─────────────┴─────────────╯             */

/ {
     behaviors {
        nbspc: n_bspc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N>, <&kp BSPC>;
            mods = <(MOD_LCTL|MOD_RALT)>;
        };
    };
    
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        combo_ent {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp RET>;
        };
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp BSPC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp TAB>;
        };
        combo_quote {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp SQT>;
        };
        combo_lclk {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&mkp LCLK>;
        };
        combo_rclk {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&mkp RCLK>;
        };
        combo_del {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp DEL>;
        };
        combo_clawler {
            timeout-ms = <50>;
            key-positions = <0 1 2>;
            bindings = <&tog CLAWLER>;
        };
        combo_lgui {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp LGUI>;
        };
        combo_equal {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp EQUAL>;
        };
        combo_fslh {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp FSLH>;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";
                default_layer {

                        bindings = <
   &none  &kp Q &kp W &kp F &kp P &kp B                         &kp J &kp L     &kp U     &kp Y               &kp SEMI     &none
   &none   &kp A &kp R &kp S &kp T &kp G                         &kp M &kp N     &kp E     &lt NAVLAYER I      &kp O        &none
   &none    &kp Z &kp X &kp C &kp D &kp V                         &kp K &kp H     &kp COMMA &kp DOT             &kp FSLH     &none

               /**/  &kp LCTRL &kp LCTRL &lt NUMLAYER SPACE       /**/ &sk RSHIFT &kp RCTRL &kp RALT
                  
                        >;
                };
                NUMLAYER {

                        bindings = <
   &none   &kp EXCL &kp BSLH   &kp LBRC &kp RBRC &kp PIPE2                 &kp FSLH    &kp N7  &kp N8     &kp N9   &kp ASTRK          &none
   &none   &kp HASH &kp DLLR   &kp LPAR &kp RPAR &kp DOT                   &kp BSLH    &kp N4  &kp N5     &kp N6   &kp PLUS           &none
   &none   &kp FSLH &kp CARET  &kp LBKT &kp RBKT &kp TILDE2                &trans      &kp N1  &kp N2     &kp N3   &kp KP_DIVIDE      &none

                                        &trans &sk LSHIFT &trans           &mt LSHIFT NUMBER_0    &kp RSHIFT  &kp RALT
                  
                        >;
                };
                NAVLAYER {

                        bindings = <
    &none  &trans  &kp PG_DN   &kp UP      &kp PG_UP   &trans              &trans       &trans  &trans  &trans  &trans  &bt BT_CLR_ALL
    &none  &trans  &kp LEFT    &kp DOWN    &kp RIGHT   &trans              &trans       &trans  &trans  &trans  &trans  &none
    &none  &trans  &trans      &trans      &trans      &trans              &bt BT_SEL 3 &trans  &trans  &trans  &trans   &none

                                        &trans &sk LSHIFT &kp SPACE      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2
                  
                        >;
                };
                CLAWLER {

                        bindings = <
   &none    &trans &kp BSPC     &kp UP      &kp R               &trans      &trans   &trans     &trans    &trans   &trans     &none 
   &none    &trans &kp LEFT     &kp DOWN    &kp RIGHT           &trans      &trans   &trans     &trans    &trans   &trans     &none 
   &none    &trans &trans       &trans      &trans              &trans      &trans   &trans     &trans    &trans   &trans     &none 

                   &trans &kp RET &kp SPACE                          &trans &trans &trans
                  
                        >;
                };
        };
};
